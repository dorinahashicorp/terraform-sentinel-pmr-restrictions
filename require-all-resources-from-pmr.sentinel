# Import the tfconfig/v2 import to access Terraform configuration data
import "tfconfig/v2" as tfconfig

# Standard strings import for string operations
import "strings"

### Parameters ###
# Define the address of the Terraform Cloud or Enterprise server
param address default "app.terraform.io"

# Define the organization allowed to source modules from
param organization default "Infragoose"

### Logic ###

# Find modules called from the root module that are not from the specified PMR
violatingMCs = filter tfconfig.module_calls as index, mc {
  mc.module_address is "" and
  not strings.has_prefix(mc.source, address + "/" + organization)
}

# Print violation messages for invalid modules
if length(violatingMCs) > 0 {
  print("All modules called from the root module must come from the private module registry",
        "in the organization:", organization, "on server", address)
  for violatingMCs as index, mc {
    print("The module", mc.name, "called from the root module has source",
          mc.source, "which is not allowed.")
  }
}

# Main rule: only allow deployment if there are no violations
main = rule {
  length(violatingMCs) is 0
}
